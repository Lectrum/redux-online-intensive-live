{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/actions.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/actions.js","mtime":1541424295710},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1541693963098},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Types\nimport{FETCH_POSTS_ASYNC,FILL_POSTS}from'./types';// Instruments\nimport{Post}from'helpers';export const fillPosts=posts=>({type:FILL_POSTS,payload:posts});// export const fetchPostsAsync = () => {\n//     return async (dispatch, getState, api) => {\n//         const response = await fetch(\n//             'https://jsonplaceholder.typicode.com/posts',\n//         );\n//         // const response = await fetch(`${api}/posts`);\n//         const result = await response.json();\n//         const posts = result.map((post) => new Post(post.title));\n//         dispatch(fillPosts(posts));\n//     };\n// };\nexport const fetchPostsAsync=()=>({type:FETCH_POSTS_ASYNC});;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(fillPosts,\"fillPosts\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/actions.js\");reactHotLoader.register(fetchPostsAsync,\"fetchPostsAsync\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/actions.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/actions.js"],"names":["FETCH_POSTS_ASYNC","FILL_POSTS","Post","fillPosts","posts","type","payload","fetchPostsAsync"],"mappings":"0GAAA;AACA,OAASA,iBAAT,CAA4BC,UAA5B,KAA8C,SAA9C,CAEA;AACA,OAASC,IAAT,KAAqB,SAArB,CAEA,MAAO,MAAMC,CAAAA,SAAS,CAAIC,KAAD,GAAY,CACjCC,IAAI,CAAKJ,UADwB,CAEjCK,OAAO,CAAEF,KAFwB,CAAZ,CAAlB,CAKP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,MAAO,MAAMG,CAAAA,eAAe,CAAG,KAAO,CAClCF,IAAI,CAAEL,iBAD4B,CAAP,CAAxB,C,gLAnBMG,S,yIAmBAI,e","sourcesContent":["// Types\nimport { FETCH_POSTS_ASYNC, FILL_POSTS } from './types';\n\n// Instruments\nimport { Post } from 'helpers';\n\nexport const fillPosts = (posts) => ({\n    type:    FILL_POSTS,\n    payload: posts,\n});\n\n// export const fetchPostsAsync = () => {\n//     return async (dispatch, getState, api) => {\n//         const response = await fetch(\n//             'https://jsonplaceholder.typicode.com/posts',\n//         );\n//         // const response = await fetch(`${api}/posts`);\n\n//         const result = await response.json();\n//         const posts = result.map((post) => new Post(post.title));\n\n//         dispatch(fillPosts(posts));\n//     };\n// };\n\nexport const fetchPostsAsync = () => ({\n    type: FETCH_POSTS_ASYNC,\n});\n"]}]}