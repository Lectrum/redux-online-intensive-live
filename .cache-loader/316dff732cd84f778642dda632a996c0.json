{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/redux/8-redux-testing/example-01/Main/index.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/redux/8-redux-testing/example-01/Main/index.js","mtime":1542042616336},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1541693963098},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport React,{Component}from'react';export class Main extends Component{constructor(...args){super(...args);this.state={message:'',posts:[]};this._handleTextAreaChange=({target:{value}})=>{this.setState(()=>({message:value}));};this._handleSubmit=event=>{event.preventDefault();const{message}=this.state;this.setState(({posts})=>({posts:[{message},...posts],message:''}));};}render(){const{message,posts}=this.state;const postsItems=posts.map(({message:text},index)=>React.createElement(\"li\",{key:index},text));return React.createElement(\"section\",null,React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"textarea\",{value:message,onChange:this.handleTextAreaChange}),React.createElement(\"input\",{type:\"submit\",value:'Add message'})),React.createElement(\"ul\",null,postsItems));}// @ts-ignore\n__reactstandin__regenerateByEval(key,code){// @ts-ignore\nthis[key]=eval(code);}};(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(Main,\"Main\",\"/Users/furthur/experiments/generated/source/examples/redux/8-redux-testing/example-01/Main/index.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/redux/8-redux-testing/example-01/Main/index.js"],"names":["React","Component","Main","state","message","posts","_handleTextAreaChange","target","value","setState","_handleSubmit","event","preventDefault","render","postsItems","map","text","index","handleSubmit","handleTextAreaChange"],"mappings":"0GAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAO,MAAMC,CAAAA,IAAN,QAAmBD,CAAAA,SAAU,0CAChCE,KADgC,CACxB,CACJC,OAAO,CAAE,EADL,CAEJC,KAAK,CAAI,EAFL,CADwB,MAMhCC,qBANgC,CAMR,CAAC,CAAEC,MAAM,CAAE,CAAEC,KAAF,CAAV,CAAD,GAA2B,CAC/C,KAAKC,QAAL,CAAc,KAAO,CACjBL,OAAO,CAAEI,KADQ,CAAP,CAAd,EAGH,CAV+B,MAYhCE,aAZgC,CAYfC,KAAD,EAAW,CACvBA,KAAK,CAACC,cAAN,GACA,KAAM,CAAER,OAAF,EAAc,KAAKD,KAAzB,CAEA,KAAKM,QAAL,CAAc,CAAC,CAAEJ,KAAF,CAAD,IAAgB,CAC1BA,KAAK,CAAI,CAAC,CAAED,OAAF,CAAD,CAAc,GAAGC,KAAjB,CADiB,CAE1BD,OAAO,CAAE,EAFiB,CAAhB,CAAd,EAIH,CApB+B,EAsBhCS,MAAM,EAAG,CACL,KAAM,CAAET,OAAF,CAAWC,KAAX,EAAqB,KAAKF,KAAhC,CACA,KAAMW,CAAAA,UAAU,CAAGT,KAAK,CAACU,GAAN,CAAU,CAAC,CAAEX,OAAO,CAAEY,IAAX,CAAD,CAAoBC,KAApB,GACzB,0BAAI,GAAG,CAAKA,KAAZ,EAAqBD,IAArB,CADe,CAAnB,CAIA,MACI,oCACI,4BAAM,QAAQ,CAAK,KAAKE,YAAxB,EACI,gCACI,KAAK,CAAKd,OADd,CAEI,QAAQ,CAAK,KAAKe,oBAFtB,EADJ,CAKI,6BACI,IAAI,CAAG,QADX,CAEI,KAAK,CAAK,aAFd,EALJ,CADJ,CAWI,8BAAKL,UAAL,CAXJ,CADJ,CAeH,CA3C+B;AAAA;AAAA,uB,gLAAvBZ,I","sourcesContent":["// Core\nimport React, { Component } from 'react';\n\nexport class Main extends Component {\n    state = {\n        message: '',\n        posts:   [],\n    };\n\n    _handleTextAreaChange = ({ target: { value } }) => {\n        this.setState(() => ({\n            message: value,\n        }));\n    };\n\n    _handleSubmit = (event) => {\n        event.preventDefault();\n        const { message } = this.state;\n\n        this.setState(({ posts }) => ({\n            posts:   [{ message }, ...posts ],\n            message: '',\n        }));\n    };\n\n    render() {\n        const { message, posts } = this.state;\n        const postsItems = posts.map(({ message: text }, index) => (\n            <li key = { index }>{text}</li>\n        ));\n\n        return (\n            <section>\n                <form onSubmit = { this.handleSubmit }>\n                    <textarea\n                        value = { message }\n                        onChange = { this.handleTextAreaChange }\n                    />\n                    <input\n                        type = 'submit'\n                        value = { 'Add message' }\n                    />\n                </form>\n                <ul>{postsItems}</ul>\n            </section>\n        );\n    }\n}\n"]}]}