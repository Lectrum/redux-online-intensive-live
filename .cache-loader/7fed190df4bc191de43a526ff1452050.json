{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/init/middleware.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/init/middleware.js","mtime":1541420251631},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1541693963098},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport{createLogger}from'redux-logger';export const logger=createLogger({duration:true,collapsed:true,colors:{title:action=>{return action.error?'firebrick':'deepskyblue';},prevState:()=>'#1C5FAF',action:()=>'#149945',nextState:()=>'#A47104',error:()=>'#ff0005'}});;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(logger,\"logger\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/init/middleware.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/init/middleware.js"],"names":["createLogger","logger","duration","collapsed","colors","title","action","error","prevState","nextState"],"mappings":"0GAAA;AACA,OAASA,YAAT,KAA6B,cAA7B,CAEA,MAAO,MAAMC,CAAAA,MAAM,CAAGD,YAAY,CAAC,CAC/BE,QAAQ,CAAG,IADoB,CAE/BC,SAAS,CAAE,IAFoB,CAG/BC,MAAM,CAAK,CACPC,KAAK,CAAGC,MAAD,EAAY,CACf,MAAOA,CAAAA,MAAM,CAACC,KAAP,CAAe,WAAf,CAA6B,aAApC,CACH,CAHM,CAIPC,SAAS,CAAE,IAAM,SAJV,CAKPF,MAAM,CAAK,IAAM,SALV,CAMPG,SAAS,CAAE,IAAM,SANV,CAOPF,KAAK,CAAM,IAAM,SAPV,CAHoB,CAAD,CAA3B,C,gLAAMN,M","sourcesContent":["// Core\nimport { createLogger } from 'redux-logger';\n\nexport const logger = createLogger({\n    duration:  true,\n    collapsed: true,\n    colors:    {\n        title: (action) => {\n            return action.error ? 'firebrick' : 'deepskyblue';\n        },\n        prevState: () => '#1C5FAF',\n        action:    () => '#149945',\n        nextState: () => '#A47104',\n        error:     () => '#ff0005',\n    },\n});\n"]}]}