{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/react/17-HOC/HOC-utils/withLogging-2.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/react/17-HOC/HOC-utils/withLogging-2.js","mtime":1541424400125},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1542613935989},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport React,{Component}from'react';// Helpers\nimport{log,getDisplayName}from'helpers';export const withLogging=(options={delay:1000,color:'cornflowerblue'})=>{return Enhanceable=>{class WithLogging extends Component{constructor(...args){super(...args);this._report=()=>{const{color='cornflowerblue'}=options;const componentName=`${getDisplayName(Enhanceable)}`;log(`${componentName} component logs to external service...`,color);};}componentDidMount(){const{delay=1000}=options;this._report();this.timer=setInterval(this._report,delay);}componentWillUnmount(){clearInterval(this.timer);}render(){return React.createElement(Enhanceable,this.props);}// @ts-ignore\n__reactstandin__regenerateByEval(key,code){// @ts-ignore\nthis[key]=eval(code);}}WithLogging.displayName=`withLogging(${getDisplayName(Enhanceable)})`;return WithLogging;};};;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(withLogging,\"withLogging\",\"/Users/furthur/experiments/generated/source/examples/react/17-HOC/HOC-utils/withLogging-2.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/react/17-HOC/HOC-utils/withLogging-2.js"],"names":["React","Component","log","getDisplayName","withLogging","options","delay","color","Enhanceable","WithLogging","_report","componentName","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","render","props","displayName"],"mappings":"0GAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA;AACA,OAASC,GAAT,CAAcC,cAAd,KAAoC,SAApC,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CACvBC,OAAO,CAAG,CAAEC,KAAK,CAAE,IAAT,CAAeC,KAAK,CAAE,gBAAtB,CADa,GAEtB,CACD,MAAQC,CAAAA,WAAD,EAAiB,CACpB,KAAMC,CAAAA,WAAN,QAA0BR,CAAAA,SAAU,0CAYhCS,OAZgC,CAYtB,IAAM,CACZ,KAAM,CAAEH,KAAK,CAAG,gBAAV,EAA+BF,OAArC,CACA,KAAMM,CAAAA,aAAa,CAAI,GAAER,cAAc,CAACK,WAAD,CAAc,EAArD,CACAN,GAAG,CACE,GAAES,aAAc,wCADlB,CAECJ,KAFD,CAAH,CAIH,CAnB+B,EAChCK,iBAAiB,EAAG,CAChB,KAAM,CAAEN,KAAK,CAAG,IAAV,EAAmBD,OAAzB,CAEA,KAAKK,OAAL,GACA,KAAKG,KAAL,CAAaC,WAAW,CAAC,KAAKJ,OAAN,CAAeJ,KAAf,CAAxB,CACH,CAEDS,oBAAoB,EAAG,CACnBC,aAAa,CAAC,KAAKH,KAAN,CAAb,CACH,CAWDI,MAAM,EAAG,CACL,MAAO,qBAAC,WAAD,CAAkB,KAAKC,KAAvB,CAAP,CACH,CAvB+B;AAAA;AAAA,uBA0BpCT,WAAW,CAACU,WAAZ,CAA2B,eAAchB,cAAc,CAACK,WAAD,CAAc,GAArE,CAEA,MAAOC,CAAAA,WAAP,CACH,CA9BD,CA+BH,CAlCM,C,gLAAML,W","sourcesContent":["// Core\nimport React, { Component } from 'react';\n\n// Helpers\nimport { log, getDisplayName } from 'helpers';\n\nexport const withLogging = (\n    options = { delay: 1000, color: 'cornflowerblue' },\n) => {\n    return (Enhanceable) => {\n        class WithLogging extends Component {\n            componentDidMount() {\n                const { delay = 1000 } = options;\n\n                this._report();\n                this.timer = setInterval(this._report, delay);\n            }\n\n            componentWillUnmount() {\n                clearInterval(this.timer);\n            }\n\n            _report = () => {\n                const { color = 'cornflowerblue' } = options;\n                const componentName = `${getDisplayName(Enhanceable)}`;\n                log(\n                    `${componentName} component logs to external service...`,\n                    color,\n                );\n            };\n\n            render() {\n                return <Enhanceable { ...this.props } />;\n            }\n        }\n\n        WithLogging.displayName = `withLogging(${getDisplayName(Enhanceable)})`;\n\n        return WithLogging;\n    };\n};\n"]}]}