{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/saga/workers/fetchPostsAsync.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/saga/workers/fetchPostsAsync.js","mtime":1541424262917},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1541693963098},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport{call,put}from'redux-saga/effects';import{delay}from'redux-saga';// Instruments\nimport{fillPosts}from'../../actions';import{startFetching,stopFetching,emitError}from'../../../ui/actions';import{Post}from'helpers';export function*fetchPostsAsync(){try{yield put(startFetching());const response=yield call(fetch,'https://jsonplaceholder.typicode.com/posts');const result=yield call([response,response.json]);if(response.status!==200){throw new Error('Failed to load posts');}const posts=result.map(post=>new Post(post.title));yield delay(3000);yield put(fillPosts(posts));}catch(error){yield put(emitError(error,'fetchPostsAsync'));}finally{yield put(stopFetching());}};(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(fetchPostsAsync,\"fetchPostsAsync\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/saga/workers/fetchPostsAsync.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/bus/posts/saga/workers/fetchPostsAsync.js"],"names":["call","put","delay","fillPosts","startFetching","stopFetching","emitError","Post","fetchPostsAsync","response","fetch","result","json","status","Error","posts","map","post","title","error"],"mappings":"0GAAA;AACA,OAASA,IAAT,CAAeC,GAAf,KAA0B,oBAA1B,CACA,OAASC,KAAT,KAAsB,YAAtB,CAEA;AACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,aAAT,CAAwBC,YAAxB,CAAsCC,SAAtC,KAAuD,qBAAvD,CACA,OAASC,IAAT,KAAqB,SAArB,CAEA,MAAO,UAAUC,eAAV,EAA4B,CAC/B,GAAI,CACA,KAAMP,CAAAA,GAAG,CAACG,aAAa,EAAd,CAAT,CACA,KAAMK,CAAAA,QAAQ,CAAG,KAAMT,CAAAA,IAAI,CACvBU,KADuB,CAEvB,4CAFuB,CAA3B,CAKA,KAAMC,CAAAA,MAAM,CAAG,KAAMX,CAAAA,IAAI,CAAC,CAAES,QAAF,CAAYA,QAAQ,CAACG,IAArB,CAAD,CAAzB,CAEA,GAAIH,QAAQ,CAACI,MAAT,GAAoB,GAAxB,CAA6B,CACzB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAAN,CACH,CAED,KAAMC,CAAAA,KAAK,CAAGJ,MAAM,CAACK,GAAP,CAAYC,IAAD,EAAU,GAAIV,CAAAA,IAAJ,CAASU,IAAI,CAACC,KAAd,CAArB,CAAd,CAEA,KAAMhB,CAAAA,KAAK,CAAC,IAAD,CAAX,CACA,KAAMD,CAAAA,GAAG,CAACE,SAAS,CAACY,KAAD,CAAV,CAAT,CACH,CAAC,MAAOI,KAAP,CAAc,CACZ,KAAMlB,CAAAA,GAAG,CAACK,SAAS,CAACa,KAAD,CAAQ,iBAAR,CAAV,CAAT,CACH,CAnBD,OAmBU,CACN,KAAMlB,CAAAA,GAAG,CAACI,YAAY,EAAb,CAAT,CACH,CACJ,C,gLAvBgBG,e","sourcesContent":["// Core\nimport { call, put } from 'redux-saga/effects';\nimport { delay } from 'redux-saga';\n\n// Instruments\nimport { fillPosts } from '../../actions';\nimport { startFetching, stopFetching, emitError } from '../../../ui/actions';\nimport { Post } from 'helpers';\n\nexport function* fetchPostsAsync() {\n    try {\n        yield put(startFetching());\n        const response = yield call(\n            fetch,\n            'https://jsonplaceholder.typicode.com/posts',\n        );\n\n        const result = yield call([ response, response.json ]);\n\n        if (response.status !== 200) {\n            throw new Error('Failed to load posts');\n        }\n\n        const posts = result.map((post) => new Post(post.title));\n\n        yield delay(3000);\n        yield put(fillPosts(posts));\n    } catch (error) {\n        yield put(emitError(error, 'fetchPostsAsync'));\n    } finally {\n        yield put(stopFetching());\n    }\n}\n"]}]}