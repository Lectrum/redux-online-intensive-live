{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/bus/posts/saga/watchers.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/bus/posts/saga/watchers.js","mtime":1541423085662},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1541693963098},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport{takeEvery}from'redux-saga/effects';// Workers\nimport{fetchPostsAsync}from'./workers';// Types\nimport{FETCH_POSTS_ASYNC}from'../types';export function*watchPosts(){yield takeEvery(FETCH_POSTS_ASYNC,fetchPostsAsync);};(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(watchPosts,\"watchPosts\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/bus/posts/saga/watchers.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/core/bus/posts/saga/watchers.js"],"names":["takeEvery","fetchPostsAsync","FETCH_POSTS_ASYNC","watchPosts"],"mappings":"0GAAA;AACA,OAASA,SAAT,KAA0B,oBAA1B,CAEA;AACA,OAASC,eAAT,KAAgC,WAAhC,CAEA;AACA,OAASC,iBAAT,KAAkC,UAAlC,CAEA,MAAO,UAAUC,UAAV,EAAuB,CAC1B,KAAMH,CAAAA,SAAS,CAACE,iBAAD,CAAoBD,eAApB,CAAf,CACH,C,gLAFgBE,U","sourcesContent":["// Core\nimport { takeEvery } from 'redux-saga/effects';\n\n// Workers\nimport { fetchPostsAsync } from './workers';\n\n// Types\nimport { FETCH_POSTS_ASYNC } from '../types';\n\nexport function* watchPosts() {\n    yield takeEvery(FETCH_POSTS_ASYNC, fetchPostsAsync);\n}\n"]}]}