{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/index.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/index.js","mtime":1542042150616},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1541693963098},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport React,{Component}from'react';import{render}from'react-dom';import{Provider}from'react-redux';import{connect}from'react-redux';// Instruments\nimport{fetchPostsAsync}from'./bus/posts/actions';import{store}from'./init/store';const mapState=state=>{return{posts:state.posts,isFetching:state.ui.isFetching};};const mapDispatch={fetchPostsAsync};export const ConnectedFeed=connect(mapState,mapDispatch)(class Feed extends Component{constructor(...args){super(...args);this._fetchPostsAsync=()=>this.props.fetchPostsAsync();this._getPosts=()=>{return this.props.posts.map(post=>{return React.createElement(\"li\",{key:post.id},post.comment);});};}render(){const{isFetching}=this.props;const posts=this._getPosts();const buttonMessage=isFetching?'Fetching...':'Fetch posts';return React.createElement(\"section\",{className:\"example\"},React.createElement(\"h1\",null,\"Posts\"),React.createElement(\"button\",{disabled:isFetching,onClick:this._fetchPostsAsync},buttonMessage),React.createElement(\"ul\",null,posts));}// @ts-ignore\n__reactstandin__regenerateByEval(key,code){// @ts-ignore\nthis[key]=eval(code);}});render(React.createElement(Provider,{store:store},React.createElement(ConnectedFeed,null)),document.getElementById('app'));;(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(mapState,\"mapState\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/index.js\");reactHotLoader.register(mapDispatch,\"mapDispatch\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/index.js\");reactHotLoader.register(ConnectedFeed,\"ConnectedFeed\",\"/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/index.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/examples/redux/4-asynchronisity/index.js"],"names":["React","Component","render","Provider","connect","fetchPostsAsync","store","mapState","state","posts","isFetching","ui","mapDispatch","ConnectedFeed","Feed","_fetchPostsAsync","props","_getPosts","map","post","id","comment","buttonMessage","document","getElementById"],"mappings":"0GAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA;AACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,OAASC,KAAT,KAAsB,cAAtB,CAEA,KAAMC,CAAAA,QAAQ,CAAIC,KAAD,EAAW,CACxB,MAAO,CACHC,KAAK,CAAOD,KAAK,CAACC,KADf,CAEHC,UAAU,CAAEF,KAAK,CAACG,EAAN,CAASD,UAFlB,CAAP,CAIH,CALD,CAOA,KAAME,CAAAA,WAAW,CAAG,CAChBP,eADgB,CAApB,CAIA,MAAO,MAAMQ,CAAAA,aAAa,CAAGT,OAAO,CAChCG,QADgC,CAEhCK,WAFgC,CAAP,CAIzB,KAAME,CAAAA,IAAN,QAAmBb,CAAAA,SAAU,0CACzBc,gBADyB,CACN,IAAM,KAAKC,KAAL,CAAWX,eAAX,EADA,MAEzBY,SAFyB,CAEb,IAAM,CACd,MAAO,MAAKD,KAAL,CAAWP,KAAX,CAAiBS,GAAjB,CAAsBC,IAAD,EAAU,CAClC,MAAO,2BAAI,GAAG,CAAKA,IAAI,CAACC,EAAjB,EAAuBD,IAAI,CAACE,OAA5B,CAAP,CACH,CAFM,CAAP,CAGH,CANwB,EAQzBnB,MAAM,EAAG,CACL,KAAM,CAAEQ,UAAF,EAAiB,KAAKM,KAA5B,CACA,KAAMP,CAAAA,KAAK,CAAG,KAAKQ,SAAL,EAAd,CAEA,KAAMK,CAAAA,aAAa,CAAGZ,UAAU,CAAG,aAAH,CAAmB,aAAnD,CAEA,MACI,gCAAS,SAAS,CAAG,SAArB,EACI,sCADJ,CAEI,8BACI,QAAQ,CAAKA,UADjB,CAEI,OAAO,CAAK,KAAKK,gBAFrB,EAGKO,aAHL,CAFJ,CAOI,8BAAKb,KAAL,CAPJ,CADJ,CAWH,CAzBwB;AAAA;AAAA,uBAJJ,CAAtB,CAiCPP,MAAM,CACF,oBAAC,QAAD,EAAU,KAAK,CAAKI,KAApB,EACI,oBAAC,aAAD,MADJ,CADE,CAIFiB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAJE,CAAN,C,gLA5CMjB,Q,4HAOAK,W,+HAIOC,a","sourcesContent":["// Core\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { connect } from 'react-redux';\n\n// Instruments\nimport { fetchPostsAsync } from './bus/posts/actions';\nimport { store } from './init/store';\n\nconst mapState = (state) => {\n    return {\n        posts:      state.posts,\n        isFetching: state.ui.isFetching,\n    };\n};\n\nconst mapDispatch = {\n    fetchPostsAsync,\n};\n\nexport const ConnectedFeed = connect(\n    mapState,\n    mapDispatch,\n)(\n    class Feed extends Component {\n        _fetchPostsAsync = () => this.props.fetchPostsAsync();\n        _getPosts = () => {\n            return this.props.posts.map((post) => {\n                return <li key = { post.id }>{post.comment}</li>;\n            });\n        };\n\n        render() {\n            const { isFetching } = this.props;\n            const posts = this._getPosts();\n\n            const buttonMessage = isFetching ? 'Fetching...' : 'Fetch posts';\n\n            return (\n                <section className = 'example'>\n                    <h1>Posts</h1>\n                    <button\n                        disabled = { isFetching }\n                        onClick = { this._fetchPostsAsync }>\n                        {buttonMessage}\n                    </button>\n                    <ul>{posts}</ul>\n                </section>\n            );\n        }\n    },\n);\n\nrender(\n    <Provider store = { store }>\n        <ConnectedFeed />\n    </Provider>,\n    document.getElementById('app'),\n);\n"]}]}