{"remainingRequest":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/furthur/experiments/generated/source/tests/forms/components/LoginForm.js","dependencies":[{"path":"/Users/furthur/experiments/generated/source/tests/forms/components/LoginForm.js","mtime":1543334154324},{"path":"/Users/furthur/experiments/generated/.babelrc.js","mtime":1542614115133},{"path":"/Users/furthur/experiments/generated/node_modules/cache-loader/dist/cjs.js","mtime":1540981248223},{"path":"/Users/furthur/experiments/generated/node_modules/babel-loader/lib/index.js","mtime":1538168240236}],"contextDependencies":[],"result":["(function(){var enterModule=require('react-hot-loader').enterModule;enterModule&&enterModule(module);})();// Core\nimport React,{Component}from'react';import{Field}from'formik';import classNames from'classnames';// Instruments\nimport Styles from'./styles.m.css';export class LoginForm extends Component{render(){const{handleSubmit,isSubmitting,errors,touched}=this.props;const emailClassName=classNames({[Styles.invalidInput]:errors.email&&touched.email});const passwordClassName=classNames({[Styles.invalidInput]:errors.password&&touched.password});const btnClassName=classNames({[Styles.disabled]:isSubmitting});return React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(Field,{name:\"email\",type:\"email\",className:emailClassName}),React.createElement(Field,{name:\"password\",type:\"password\",className:passwordClassName}),React.createElement(\"label\",null,React.createElement(Field,{name:\"remember\",type:\"checkbox\"}),\"Remember me\"),React.createElement(\"button\",{className:btnClassName,disabled:isSubmitting,type:\"submit\"},\"Submit\"));}// @ts-ignore\n__reactstandin__regenerateByEval(key,code){// @ts-ignore\nthis[key]=eval(code);}};(function(){var reactHotLoader=require('react-hot-loader').default;var leaveModule=require('react-hot-loader').leaveModule;if(!reactHotLoader){return;}reactHotLoader.register(LoginForm,\"LoginForm\",\"/Users/furthur/experiments/generated/source/tests/forms/components/LoginForm.js\");leaveModule(module);})();;",{"version":3,"sources":["/Users/furthur/experiments/generated/source/tests/forms/components/LoginForm.js"],"names":["React","Component","Field","classNames","Styles","LoginForm","render","handleSubmit","isSubmitting","errors","touched","props","emailClassName","invalidInput","email","passwordClassName","password","btnClassName","disabled"],"mappings":"0GAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,KAAsB,QAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA;AACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CAEA,MAAO,MAAMC,CAAAA,SAAN,QAAwBJ,CAAAA,SAAU,CACrCK,MAAM,EAAG,CACL,KAAM,CACFC,YADE,CAEFC,YAFE,CAGFC,MAHE,CAIFC,OAJE,EAKF,KAAKC,KALT,CAMA,KAAMC,CAAAA,cAAc,CAAGT,UAAU,CAAC,CAAE,CAACC,MAAM,CAACS,YAAR,EAAuBJ,MAAM,CAACK,KAAP,EAAgBJ,OAAO,CAACI,KAAjD,CAAD,CAAjC,CACA,KAAMC,CAAAA,iBAAiB,CAAGZ,UAAU,CAAC,CAAE,CAACC,MAAM,CAACS,YAAR,EAAuBJ,MAAM,CAACO,QAAP,EAAmBN,OAAO,CAACM,QAApD,CAAD,CAApC,CACA,KAAMC,CAAAA,YAAY,CAAGd,UAAU,CAAC,CAAE,CAACC,MAAM,CAACc,QAAR,EAAmBV,YAArB,CAAD,CAA/B,CAEA,MACI,6BAAM,QAAQ,CAAKD,YAAnB,EACI,oBAAC,KAAD,EACI,IAAI,CAAC,OADT,CAEI,IAAI,CAAC,OAFT,CAGI,SAAS,CAAKK,cAHlB,EADJ,CAMI,oBAAC,KAAD,EACI,IAAI,CAAG,UADX,CAEI,IAAI,CAAG,UAFX,CAGI,SAAS,CAAKG,iBAHlB,EANJ,CAWI,iCACI,oBAAC,KAAD,EAAO,IAAI,CAAG,UAAd,CAAyB,IAAI,CAAG,UAAhC,EADJ,eAXJ,CAeI,8BACI,SAAS,CAAKE,YADlB,CAEI,QAAQ,CAAKT,YAFjB,CAGI,IAAI,CAAG,QAHX,WAfJ,CADJ,CAyBH,CArCoC;AAAA;AAAA,uB,gLAA5BH,S","sourcesContent":["// Core\nimport React, { Component } from 'react';\nimport { Field } from 'formik';\nimport classNames from 'classnames';\n\n// Instruments\nimport Styles from './styles.m.css';\n\nexport class LoginForm extends Component {\n    render() {\n        const {\n            handleSubmit,\n            isSubmitting,\n            errors,\n            touched,\n        } = this.props;\n        const emailClassName = classNames({ [Styles.invalidInput]: errors.email && touched.email });\n        const passwordClassName = classNames({ [Styles.invalidInput]: errors.password && touched.password });\n        const btnClassName = classNames({ [Styles.disabled]: isSubmitting });\n\n        return (\n            <form onSubmit = { handleSubmit }>\n                <Field\n                    name=\"email\"\n                    type=\"email\"\n                    className = { emailClassName }\n                />\n                <Field\n                    name = 'password'\n                    type = 'password'\n                    className = { passwordClassName }\n                />\n                <label>\n                    <Field name = 'remember' type = 'checkbox' />\n                    Remember me\n                </label>\n                <button\n                    className = { btnClassName }\n                    disabled = { isSubmitting }\n                    type = 'submit'\n                >\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n"]}]}